// Code generated by qtc from "layout.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line layout.qtpl:1
package templates

//line layout.qtpl:2
import "time"

//line layout.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line layout.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line layout.qtpl:6
type User struct {
	ID          int       `db:"id"`
	AccountName string    `db:"account_name"`
	Passhash    string    `db:"passhash"`
	Authority   int       `db:"authority"`
	DelFlg      int       `db:"del_flg"`
	CreatedAt   time.Time `db:"created_at"`
}

//line layout.qtpl:16
func StreamRender(qw422016 *qt422016.Writer, Me User, content string) {
//line layout.qtpl:16
	qw422016.N().S(`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Iscogram</title>
    <link href="/css/style.css" media="screen" rel="stylesheet" type="text/css">
  </head>
  <body>
    <div class="container">
      <div class="header">
        <div class="isu-title">
          <h1><a href="/">Iscogram</a></h1>
        </div>
        <div class="isu-header-menu">
          `)
//line layout.qtpl:31
	if Me.ID == 0 {
//line layout.qtpl:31
		qw422016.N().S(`
          <div><a href="/login">ログイン</a></div>
          `)
//line layout.qtpl:33
	} else {
//line layout.qtpl:33
		qw422016.N().S(`
          <div><a href="/@`)
//line layout.qtpl:34
		qw422016.E().S(Me.AccountName)
//line layout.qtpl:34
		qw422016.N().S(`"><span class="isu-account-name">`)
//line layout.qtpl:34
		qw422016.E().S(Me.AccountName)
//line layout.qtpl:34
		qw422016.N().S(`</span>さん</a></div>
          `)
//line layout.qtpl:35
		if Me.Authority == 1 {
//line layout.qtpl:35
			qw422016.N().S(`
          <div><a href="/admin/banned">管理者用ページ</a></div>
          `)
//line layout.qtpl:37
		}
//line layout.qtpl:37
		qw422016.N().S(`
          <div><a href="/logout">ログアウト</a></div>
          `)
//line layout.qtpl:39
	}
//line layout.qtpl:39
	qw422016.N().S(`
        </div>
      </div>

      `)
//line layout.qtpl:43
	qw422016.E().S(content)
//line layout.qtpl:43
	qw422016.N().S(`
    </div>
    <script src="/js/timeago.min.js"></script>
    <script src="/js/main.js"></script>
  </body>
</html>
`)
//line layout.qtpl:49
}

//line layout.qtpl:49
func WriteRender(qq422016 qtio422016.Writer, Me User, content string) {
//line layout.qtpl:49
	qw422016 := qt422016.AcquireWriter(qq422016)
//line layout.qtpl:49
	StreamRender(qw422016, Me, content)
//line layout.qtpl:49
	qt422016.ReleaseWriter(qw422016)
//line layout.qtpl:49
}

//line layout.qtpl:49
func Render(Me User, content string) string {
//line layout.qtpl:49
	qb422016 := qt422016.AcquireByteBuffer()
//line layout.qtpl:49
	WriteRender(qb422016, Me, content)
//line layout.qtpl:49
	qs422016 := string(qb422016.B)
//line layout.qtpl:49
	qt422016.ReleaseByteBuffer(qb422016)
//line layout.qtpl:49
	return qs422016
//line layout.qtpl:49
}
